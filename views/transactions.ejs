<!-- transactions.ejs -->
<% if (typeof error !== 'undefined' && error) { %>
    <div class="alert alert-danger d-flex align-items-center" role="alert">
        <i class="fas fa-exclamation-triangle bi flex-shrink-0 me-2" style="font-size: 1.5rem;"></i>
        <div>
            <%- error %>
        </div>
    </div>
<% } %>
<% if (typeof success !== 'undefined' && success) { %>
    <div class="alert alert-success d-flex align-items-center" role="alert">
        <i class="fas fa-check-circle bi flex-shrink-0 me-2" style="font-size: 1.5rem;"></i>
        <div>
            <%- success %>
        </div>
    </div>
<% } %>

<div class="bg-light-grey mb-4">
    <h1 class="mb-4 display-5">Transactions</h1>
    <div class="mb-3">
        <a href="/add-record?type=transaction" class="btn btn-success btn-smaller" data-bs-toggle="tooltip" data-bs-placement="right" title="Add new product quantity change transaction"><i class="fas fa-plus-circle"></i> Add New Transaction</a>
    </div>
</div>
<table class="table table-hover table-striped rounded-table table-smaller">
    <thead class="thead-dark">
        <tr>
            <th>
                Product Name
                <a href="#" class="sort-link" data-sort="product.name" data-order="asc" data-bs-toggle="tooltip" data-bs-placement="top" title="Sort by product name">
                    <i class="fa-regular fa-circle-sort"></i>
                </a>
            </th>
            <th>
                Type
                <a href="#" class="sort-link" data-sort="type" data-order="asc" data-bs-toggle="tooltip" data-bs-placement="top" title="Sort by type">
                    <i class="fa-regular fa-circle-sort"></i>
                </a>
            </th>
            <th>
                Quantity
                <a href="#" class="sort-link" data-sort="quantity" data-order="asc" data-bs-toggle="tooltip" data-bs-placement="top" title="Sort by quantity">
                    <i class="fa-regular fa-circle-sort"></i>
                </a>
            </th>
            <th>
                Date
                <a href="#" class="sort-link" data-sort="date" data-order="asc" data-bs-toggle="tooltip" data-bs-placement="top" title="Sort by date">
                    <i class="fa-regular fa-circle-sort"></i>
                </a>
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="transactionsTableBody">
        <% transactions.forEach(transaction => { %>
            <tr>
                <td>
                    <button class="btn btn-outline-secondary btn-smaller" type="button" data-bs-toggle="collapse" data-bs-target="#transactionDetails<%= transaction._id %>" aria-expanded="false" aria-controls="transactionDetails<%= transaction._id %>">
                        <i class="fas fa-chevron-down" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Show/hide details"></i>
                    </button>
                    <span class="transaction-name"><%= transaction.product.name %></span>
                </td>
                <td>
                    <span class="badge <%= transaction.type === 'in' ? 'bg-success' : 'bg-danger' %>">
                        <%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %>
                    </span>
                </td>
                <td><span class=""><%= transaction.quantity %></span></td>
                <td><%= moment(transaction.date).format('L LTS') %></td>
                <td>
                    <a href="/transactions/edit/<%= transaction._id %>" class="btn btn-info btn-smaller" data-bs-toggle="tooltip" data-bs-placement="left" title="Edit this transaction record"><i class="fas fa-edit"></i> Edit</a>
                    <a href="#" class="btn btn-danger btn-smaller" onclick="confirmDelete('<%= transaction._id %>', '<%= transaction.product.name %>')" data-id="<%= transaction._id %>" data-bs-toggle="tooltip" data-bs-placement="right" title="Delete this transaction record"><i class="fas fa-trash-alt"></i> Delete</a>
                </td>
            </tr>
            <tr class="collapse" id="transactionDetails<%= transaction._id %>">
                <td colspan="5">
                    <div class="card card-body">
                        <div style="display: flex; align-items: center; justify-content: left;">
                            <div class="mx-5"><strong>Product Category:</strong> <span class="badge bg-info"><%= transaction.product.category ? transaction.product.category.name : 'Uncategorized' %></span></div>
                            <div class="mx-5"><strong>Transaction Value:</strong> <span class="badge bg-warning">$<%= (transaction.product.price * transaction.quantity).toFixed(2) %></span></div>
                        </div>
                    </div>
                </td>
            </tr>
        <% }); %>
    </tbody>
</table>

<script>
    function confirmDelete(transactionId, transactionName) {
        if (confirm(`Are you sure you want to delete this transaction?`)) {
            fetch('/transactions/' + transactionId, {
                method: 'DELETE',
                headers: {
                    'Accept': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.error('Error:', data.error);
                    // alert(data.error);
                    window.location.href = window.location.pathname + '?error=' + encodeURIComponent(data.error);
                } else {
                    window.location.href = '/transactions?success=' + encodeURIComponent(`Transaction deleted successfully`);
                }
            })
            .catch(err => {
                console.error('Error:', err);
                alert('Network or parsing error occurred.');
            });
        }
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const sortLinks = document.querySelectorAll('.sort-link');
    
        sortLinks.forEach(link => {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                disposeTooltips();
    
                const sortParam = this.dataset.sort;
                const sortOrder = this.dataset.order;
                const url = `/transactions?sort_by=${sortParam}&order=${sortOrder}`;
    
                fetch(url, { headers: { 'Accept': 'application/json' } })
                    .then(response => response.json())
                    .then(data => {
                        updateTable(data.transactions);
                        this.dataset.order = this.dataset.order === 'asc' ? 'desc' : 'asc';
                        initializeTooltips();
                    })
                    .catch(error => console.error('Error:', error));
            });
        });
    
        function updateTable(transactions) {
            const tableBody = document.getElementById('transactionsTableBody');
            tableBody.innerHTML = '';

            transactions.forEach(transaction => {
                const detailsRow = transaction.product && transaction.product.category ? `
                    <div class="card card-body">
                        <div style="display: flex; align-items: center; justify-content: left;">
                            <div class="mx-5"><strong>Product Category:</strong> <span class="badge bg-info">${transaction.product.category.name}</span></div>
                            <div class="mx-5"><strong>Transaction Value:</strong> <span class="badge bg-warning">$${(transaction.product.price * transaction.quantity).toFixed(2)}</span></div>
                        </div>
                    </div>
                ` : `<div class="card card-body">No detailed transaction information available.</div>`;

                const row = `
                    <tr>
                        <td>
                            <button class="btn btn-outline-secondary btn-smaller" type="button" data-bs-toggle="collapse" data-bs-target="#transactionDetails${transaction._id}" aria-expanded="false" aria-controls="transactionDetails${transaction._id}">
                                <i class="fas fa-chevron-down" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Show/hide details"></i>
                            </button>
                            <span class="transaction-name">${transaction.product ? transaction.product.name : 'Product Deleted'}</span>
                        </td>
                        <td>
                            <span class="badge ${transaction.type === 'in' ? 'bg-success' : 'bg-danger'}">
                                ${transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1)}
                            </span>
                        </td>
                        <td>${transaction.quantity}</td>
                        <td>${moment(transaction.date).format('L LTS')}</td>
                        <td>
                            <a href="/transactions/edit/${transaction._id}" class="btn btn-info btn-smaller" data-bs-toggle="tooltip" data-bs-placement="left" title="Edit this transaction record"><i class="fas fa-edit"></i> Edit</a>
                            <a href="#" class="btn btn-danger btn-smaller" onclick="confirmDelete('${transaction._id}', '${transaction.product.name}')" data-id="${transaction._id}" data-bs-toggle="tooltip" data-bs-placement="right" title="Delete this transaction record"><i class="fas fa-trash-alt"></i> Delete</a>
                        </td>
                    </tr>
                    <tr class="collapse" id="transactionDetails${transaction._id}">
                        <td colspan="5">${detailsRow}</td>
                    </tr>
                `;
                tableBody.innerHTML += row;
            });
            initializeTooltips();  // Reinitialize tooltips after updating the table
        }


        function initializeTooltips() {
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function(tooltipTriggerEl) {
                new bootstrap.Tooltip(tooltipTriggerEl);
            });
        }

        function disposeTooltips() {
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function(tooltipTriggerEl) {
                const tooltipInstance = bootstrap.Tooltip.getInstance(tooltipTriggerEl);
                if (tooltipInstance) {
                    tooltipInstance.dispose();
                }
            });
        }
    });
    </script>
    